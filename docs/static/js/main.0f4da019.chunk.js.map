{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAoB/C,OAEI,aADA,CACA,QAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAM,OAAKP,GAAL,mBAAmBO,OACxCN,EAAe,MAQnB,SACG,uBACKO,KAAK,OACLC,MAAOT,EAEPU,SAvBc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAI,WAAQC,GAAR,uBAAAC,EAAA,6DAEVC,EAFU,iDAEuCC,UAAUH,GAFjD,+DAGGI,MAAOF,GAHV,cAGVG,EAHU,gBAIOA,EAAKC,OAJZ,uBAIRC,EAJQ,EAIRA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAE3B,MAAM,CACFC,GAAUD,EAAIC,GACdC,MAAUF,EAAIE,MACdV,IAAG,UAAOQ,EAAIG,cAAX,aAAO,EAAYC,iBAAiBZ,QAX/B,kBAiBTM,GAjBS,4CAAJ,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAECC,QAAQC,IAAKF,GACbH,EAAS,CAACf,KAAMkB,EAAML,SAAS,SAI5C,CAAEpB,IAEEqB,EDd0BO,CAAc5B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEc3BkB,EA7BM,WAAM,MAGe3C,mBAAS,CAAC,cAHzB,mBAGf4C,EAHe,KAGH7C,EAHG,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAEIA,SAAWA,GADLA,YCjBlC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0f4da019.chunk.js","sourcesContent":["import React, { useState }  from 'react'\r\nimport PropTypes            from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue ] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        // console.log( e.target.value );\r\n        setInputValue( e.target.value );\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( catego => [inputValue,...catego ]);\r\n            setInputValue( '' );\r\n            // console.log( 'Submit Hecho' );    \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        // <>\r\n        <form onSubmit={ handleSubmit }>\r\n           <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                // onChange={ (e) => console.log( e.target.value) }\r\n                onChange={ handleInputChange }\r\n           />\r\n        </form>\r\n        // </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired    \r\n}\r\n","\r\nexport const getGifs  = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=GGfMwf7zN2UqWvJnaBMaej2LtS8kl91L`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n        \r\n        const gifs = data.map ( img => {\r\n\r\n            return{ \r\n                id      : img.id,\r\n                title   : img.title,\r\n                url     : img.images?.downsized_medium.url\r\n                \r\n            }\r\n\r\n        });\r\n\r\n        return gifs;\r\n\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url} ) => {\r\n\r\n    // console.log({ title, url });\r\n\r\n    return (\r\n        <div className=\"card animate__animated animte_fadeIn\">\r\n            <img src={ url } alt={ title}></img>\r\n            <p> { title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React  from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>   \r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}   \r\n            <div className=\"card-grid\"> \r\n                    {\r\n                        images.map( img  => \r\n                            <GifGridItem\r\n                                key={ img.id }\r\n                                {...img } \r\n                            />\r\n                        )\r\n                    }            \r\n            </div>\r\n         </>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => \r\n                {\r\n                    console.log( imgs );\r\n                    setState({data: imgs, loading: false  });\r\n                } \r\n            );\r\n\r\n    }, [ category ]);\r\n  \r\n    return state; // { data: [], loading: true};\r\n\r\n}\r\n\r\n\r\n","import React, { useState }  from 'react';\r\nimport { AddCategory }      from './components/AddCategory';\r\nimport { GifGrid }          from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [ categories, setCategories ] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = () => setCategories([...categories, 'HunterXHunter']);\r\n    // const handleAdd = () => setCategories(['HunterXHunter', ...categories]);\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        // return <li key = { category } > { category } </li>;\r\n                        <GifGrid \r\n                            key={ category } \r\n                            category={ category }/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n//crear un componente llamado GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr/>\n"],"sourceRoot":""}